<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>مدیریت دسته‌بندی‌ها - پنل مدیریت</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: #f5f6fa;
      min-height: 100vh;
    }

    .sidebar {
      position: fixed;
      right: 0;
      top: 0;
      width: 260px;
      height: 100vh;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 20px 0;
      overflow-y: auto;
      z-index: 1000;
    }

    .sidebar-header {
      padding: 0 20px 20px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      margin-bottom: 20px;
    }

    .sidebar-header h2 {
      font-size: 22px;
      margin-bottom: 5px;
    }

    .sidebar-header p {
      font-size: 13px;
      opacity: 0.8;
    }

    .sidebar-menu {
      list-style: none;
    }

    .sidebar-menu li {
      margin-bottom: 5px;
    }

    .sidebar-menu a {
      display: flex;
      align-items: center;
      padding: 12px 20px;
      color: white;
      text-decoration: none;
      transition: all 0.3s;
      position: relative;
    }

    .sidebar-menu a:hover,
    .sidebar-menu a.active {
      background: rgba(255, 255, 255, 0.1);
    }

    .sidebar-menu a.active::before {
      content: '';
      position: absolute;
      right: 0;
      top: 0;
      height: 100%;
      width: 4px;
      background: white;
    }

    .sidebar-menu a i {
      margin-left: 12px;
      width: 20px;
      text-align: center;
    }

    .sidebar-footer {
      position: absolute;
      bottom: 20px;
      left: 20px;
      right: 20px;
    }

    .logout-btn {
      width: 100%;
      padding: 12px;
      background: rgba(255, 255, 255, 0.1);
      color: white;
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.3s;
      font-size: 14px;
    }

    .logout-btn:hover {
      background: rgba(255, 255, 255, 0.2);
    }

    .main-content {
      margin-right: 260px;
      padding: 30px;
      min-height: 100vh;
    }

    .header {
      background: white;
      padding: 20px 30px;
      border-radius: 15px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      margin-bottom: 30px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .header h1 {
      font-size: 28px;
      color: #2c3e50;
    }

    .btn-primary {
      padding: 12px 25px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      transition: all 0.3s;
      font-size: 15px;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
    }

    .categories-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
    }

    .category-card {
      background: white;
      border-radius: 15px;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
      transition: all 0.3s;
    }

    .category-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }

    .category-image {
      width: 100%;
      height: 200px;
      object-fit: cover;
      background: linear-gradient(135deg, #667eea20, #764ba220);
    }

    .category-body {
      padding: 20px;
    }

    .category-header {
      display: flex;
      justify-content: space-between;
      align-items: start;
      margin-bottom: 10px;
    }

    .category-name {
      font-size: 18px;
      font-weight: 600;
      color: #2c3e50;
      margin-bottom: 5px;
    }

    .category-slug {
      font-size: 13px;
      color: #95a5a6;
      font-family: monospace;
    }

    .category-description {
      color: #555;
      font-size: 14px;
      margin: 10px 0;
      line-height: 1.6;
    }

    .category-meta {
      display: flex;
      gap: 10px;
      margin-top: 15px;
      padding-top: 15px;
      border-top: 1px solid #f0f0f0;
    }

    .badge {
      padding: 5px 12px;
      border-radius: 20px;
      font-size: 12px;
      font-weight: 500;
    }

    .badge-success {
      background: #d4edda;
      color: #155724;
    }

    .badge-danger {
      background: #f8d7da;
      color: #721c24;
    }

    .badge-info {
      background: #d1ecf1;
      color: #0c5460;
    }

    .category-actions {
      display: flex;
      gap: 8px;
      margin-top: 15px;
    }

    .btn-icon {
      flex: 1;
      padding: 10px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.3s;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
      font-size: 14px;
      color: white;
    }

    .btn-edit {
      background: #3498db;
    }

    .btn-delete {
      background: #e74c3c;
    }

    .btn-icon:hover {
      transform: translateY(-2px);
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    }

    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.5);
      z-index: 2000;
      align-items: center;
      justify-content: center;
    }

    .modal.show {
      display: flex;
    }

    .modal-content {
      background: white;
      border-radius: 15px;
      padding: 30px;
      max-width: 500px;
      width: 90%;
      max-height: 90vh;
      overflow-y: auto;
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
    }

    .modal-header h2 {
      font-size: 24px;
      color: #2c3e50;
    }

    .close-modal {
      background: none;
      border: none;
      font-size: 28px;
      cursor: pointer;
      color: #95a5a6;
      transition: color 0.3s;
    }

    .close-modal:hover {
      color: #e74c3c;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      color: #2c3e50;
      font-weight: 500;
      font-size: 14px;
    }

    .form-group input,
    .form-group textarea {
      width: 100%;
      padding: 12px 15px;
      border: 2px solid #e0e0e0;
      border-radius: 8px;
      font-size: 14px;
      transition: all 0.3s;
      font-family: inherit;
    }

    .form-group input:focus,
    .form-group textarea:focus {
      outline: none;
      border-color: #667eea;
    }

    textarea {
      min-height: 100px;
      resize: vertical;
    }

    .checkbox-group {
      display: flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
    }

    .checkbox-group input[type="checkbox"] {
      width: auto;
      cursor: pointer;
    }

    .image-upload-area {
      border: 2px dashed #e0e0e0;
      border-radius: 10px;
      padding: 30px;
      text-align: center;
      cursor: pointer;
      transition: all 0.3s;
    }

    .image-upload-area:hover {
      border-color: #667eea;
      background: #f8f9ff;
    }

    .image-upload-area i {
      font-size: 48px;
      color: #667eea;
      margin-bottom: 10px;
    }

    .image-preview {
      margin-top: 15px;
      max-width: 100%;
      border-radius: 8px;
      display: none;
    }

    .image-preview.show {
      display: block;
    }

    .alert {
      padding: 12px 15px;
      border-radius: 10px;
      margin-bottom: 20px;
      font-size: 14px;
      display: none;
    }

    .alert.show {
      display: block;
    }

    .alert-success {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
    }

    .alert-error {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
    }

    .loading {
      text-align: center;
      padding: 60px 20px;
      color: #95a5a6;
    }

    .spinner {
      border: 3px solid #f3f3f3;
      border-top: 3px solid #667eea;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
      margin: 0 auto 15px;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .empty-state {
      text-align: center;
      padding: 60px 20px;
    }

    .empty-state i {
      font-size: 64px;
      color: #e0e0e0;
      margin-bottom: 20px;
    }

    .empty-state h3 {
      color: #2c3e50;
      margin-bottom: 10px;
    }

    .empty-state p {
      color: #95a5a6;
      margin-bottom: 20px;
    }

    @media (max-width: 768px) {
      .sidebar {
        transform: translateX(100%);
      }

      .main-content {
        margin-right: 0;
        padding: 20px;
      }

      .categories-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <!-- Sidebar -->
  <div class="sidebar">
    <div class="sidebar-header">
      <h2>پنل مدیریت</h2>
      <p id="adminName">در حال بارگذاری...</p>
    </div>

    <ul class="sidebar-menu">
      <li>
        <a href="/dashboard">
          <i class="fas fa-home"></i>
          <span>داشبورد</span>
        </a>
      </li>
      <li>
        <a href="/products">
          <i class="fas fa-box"></i>
          <span>محصولات</span>
        </a>
      </li>
      <li>
        <a href="/categories" class="active">
          <i class="fas fa-folder"></i>
          <span>دسته‌بندی‌ها</span>
        </a>
      </li>
      <li>
        <a href="/change-password">
          <i class="fas fa-key"></i>
          <span>تغییر رمز عبور</span>
        </a>
      </li>
    </ul>

    <div class="sidebar-footer">
      <button class="logout-btn" onclick="logout()">
        <i class="fas fa-sign-out-alt"></i> خروج
      </button>
    </div>
  </div>

  <!-- Main Content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header">
      <h1>مدیریت دسته‌بندی‌ها</h1>
      <button class="btn-primary" onclick="openCategoryModal()">
        <i class="fas fa-plus"></i>
        دسته‌بندی جدید
      </button>
    </div>

    <!-- Alert -->
    <div id="alertBox" class="alert"></div>

    <!-- Categories Grid -->
    <div class="categories-grid" id="categoriesGrid">
      <div class="loading">
        <div class="spinner"></div>
        <p>در حال بارگذاری دسته‌بندی‌ها...</p>
      </div>
    </div>
  </div>

  <!-- Category Modal -->
  <div class="modal" id="categoryModal">
    <div class="modal-content">
      <div class="modal-header">
        <h2 id="modalTitle">دسته‌بندی جدید</h2>
        <button class="close-modal" onclick="closeCategoryModal()">&times;</button>
      </div>

      <form id="categoryForm" enctype="multipart/form-data">
        <input type="hidden" id="categoryId">

        <div class="form-group">
          <label>نام دسته‌بندی *</label>
          <input type="text" id="categoryName" required placeholder="مثلاً: قطعات موتور">
        </div>

        <div class="form-group">
          <label>Slug (آدرس URL)</label>
          <input type="text" id="categorySlug" placeholder="مثلاً: motor-parts" dir="ltr">
          <small style="color: #95a5a6; font-size: 12px;">اختیاری - در صورت خالی بودن به صورت خودکار ایجاد می‌شود</small>
        </div>

        <div class="form-group">
          <label>توضیحات</label>
          <textarea id="categoryDescription" placeholder="توضیحات کوتاه درباره دسته‌بندی..."></textarea>
        </div>

        <div class="form-group">
          <label>ترتیب نمایش</label>
          <input type="number" id="categorySortOrder" value="0" min="0">
        </div>

        <div class="form-group">
          <label class="checkbox-group">
            <input type="checkbox" id="categoryIsActive" checked>
            <span>فعال</span>
          </label>
        </div>

<div class="form-group">
  <label>تصویر دسته‌بندی *</label>
  <div class="image-upload-area" onclick="document.getElementById('categoryImage').click()">
    <i class="fas fa-cloud-upload-alt"></i>
    <p>کلیک کنید یا تصویر را اینجا بکشید</p>
    <small style="color: #95a5a6;">حداکثر حجم: 2MB - الزامی</small>
  </div>
  <input type="file" id="categoryImage" accept="image/*" style="display: none;" required>
  <img id="imagePreview" class="image-preview" alt="Preview">
</div>

        <button type="submit" class="btn-primary" style="width: 100%; justify-content: center; padding: 14px;">
          <i class="fas fa-save"></i>
          <span id="submitBtn">ذخیره دسته‌بندی</span>
        </button>
      </form>
    </div>
  </div>

  <script>
    const token = localStorage.getItem('authToken');
    if (!token) window.location.href = '/login';

    let currentEditId = null;

    // Fetch user info
    fetch('/api/auth/me', {
      headers: { 'Authorization': `Bearer ${token}` }
    })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        document.getElementById('adminName').textContent = data.data.user.name;
      } else {
        logout();
      }
    });

    // Fetch categories
    async function fetchCategories() {
      try {
        const response = await fetch('/api/categories/admin/all?limit=100', {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        const data = await response.json();

        if (data.success) {
          displayCategories(data.data.categories);
        }
      } catch (error) {
        console.error('Error fetching categories:', error);
        showAlert('خطا در بارگذاری دسته‌بندی‌ها', 'error');
      }
    }

    // Display categories
    function displayCategories(categories) {
      const grid = document.getElementById('categoriesGrid');

      if (categories.length === 0) {
        grid.innerHTML = `
          <div class="empty-state" style="grid-column: 1 / -1;">
            <i class="fas fa-folder-open"></i>
            <h3>هیچ دسته‌بندی‌ای وجود ندارد</h3>
            <p>برای شروع، اولین دسته‌بندی خود را ایجاد کنید</p>
            <button class="btn-primary" onclick="openCategoryModal()">
              <i class="fas fa-plus"></i>
              ایجاد دسته‌بندی
            </button>
          </div>
        `;
        return;
      }

      grid.innerHTML = categories.map(category => `
        <div class="category-card">
          <img 
            src="${category.image}" 
            alt="${category.name}" 
            class="category-image"
            onerror="this.src='/uploads/categories/placeholder.png'"
          >
          <div class="category-body">
            <div class="category-header">
              <div>
                <div class="category-name">${category.name}</div>
                <div class="category-slug">${category.slug || '-'}</div>
              </div>
            </div>
            
            ${category.description ? `<div class="category-description">${category.description}</div>` : ''}
            
            <div class="category-meta">
              <span class="badge ${category.isActive ? 'badge-success' : 'badge-danger'}">
                ${category.isActive ? 'فعال' : 'غیرفعال'}
              </span>
              <span class="badge badge-info">
                <i class="fas fa-box"></i> ${category.productsCount || 0} محصول
              </span>
            </div>

            <div class="category-actions">
              <button class="btn-icon btn-edit" onclick="editCategory('${category._id}')">
                <i class="fas fa-edit"></i>
                ویرایش
              </button>
              <button class="btn-icon btn-delete" onclick="deleteCategory('${category._id}', '${category.name}', ${category.productsCount || 0})">
                <i class="fas fa-trash"></i>
                حذف
              </button>
            </div>
          </div>
        </div>
      `).join('');
    }

    // Open category modal
    function openCategoryModal(categoryId = null) {
      currentEditId = categoryId;
      document.getElementById('categoryModal').classList.add('show');
      document.getElementById('modalTitle').textContent = categoryId ? 'ویرایش دسته‌بندی' : 'دسته‌بندی جدید';

      if (!categoryId) {
        document.getElementById('categoryForm').reset();
        document.getElementById('categoryIsActive').checked = true;
        document.getElementById('imagePreview').classList.remove('show');
      }
    }

    // Close category modal
    function closeCategoryModal() {
      document.getElementById('categoryModal').classList.remove('show');
      currentEditId = null;
    }

    // Edit category
    async function editCategory(id) {
      try {
        const response = await fetch('/api/categories/admin/all?limit=100', {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        const data = await response.json();

        const category = data.data.categories.find(c => c._id === id);
        if (!category) return;

        document.getElementById('categoryId').value = category._id;
        document.getElementById('categoryName').value = category.name;
        document.getElementById('categorySlug').value = category.slug || '';
        document.getElementById('categoryDescription').value = category.description || '';
        document.getElementById('categorySortOrder').value = category.sortOrder || 0;
        document.getElementById('categoryIsActive').checked = category.isActive;

        if (category.image) {
          const preview = document.getElementById('imagePreview');
          preview.src = category.image;
          preview.classList.add('show');
        }

        openCategoryModal(category._id);
      } catch (error) {
        console.error('Error loading category:', error);
        showAlert('خطا در بارگذاری اطلاعات دسته‌بندی', 'error');
      }
    }

    // Submit category form
    document.getElementById('categoryForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData();
      formData.append('name', document.getElementById('categoryName').value);
      formData.append('slug', document.getElementById('categorySlug').value);
      formData.append('description', document.getElementById('categoryDescription').value);
      formData.append('sortOrder', document.getElementById('categorySortOrder').value);
      formData.append('isActive', document.getElementById('categoryIsActive').checked);

      const imageFile = document.getElementById('categoryImage').files[0];
      if (imageFile) {
        formData.append('image', imageFile);
      }

      const categoryId = document.getElementById('categoryId').value;
      const url = categoryId ? `/api/categories/admin/${categoryId}` : '/api/categories/admin';
      const method = categoryId ? 'PUT' : 'POST';

      try {
        const response = await fetch(url, {
          method: method,
          headers: { 'Authorization': `Bearer ${token}` },
          body: formData
        });

        const data = await response.json();

        if (data.success) {
          showAlert(data.message || 'دسته‌بندی با موفقیت ذخیره شد', 'success');
          closeCategoryModal();
          fetchCategories();
        } else {
          showAlert(data.message || 'خطا در ذخیره دسته‌بندی', 'error');
        }
      } catch (error) {
        console.error('Error saving category:', error);
        showAlert('خطا در ذخیره دسته‌بندی', 'error');
      }
    });

    // Delete category
    async function deleteCategory(id, name, productsCount) {
      if (productsCount > 0) {
        showAlert(`نمی‌توان این دسته‌بندی را حذف کرد. ${productsCount} محصول در این دسته وجود دارد`, 'error');
        return;
      }

      if (!confirm(`آیا از حذف دسته‌بندی "${name}" اطمینان دارید؟`)) return;

      try {
        const response = await fetch(`/api/categories/admin/${id}`, {
          method: 'DELETE',
          headers: { 'Authorization': `Bearer ${token}` }
        });

        const data = await response.json();

        if (data.success) {
          showAlert('دسته‌بندی با موفقیت حذف شد', 'success');
          fetchCategories();
        } else {
          showAlert(data.message || 'خطا در حذف دسته‌بندی', 'error');
        }
      } catch (error) {
        console.error('Error deleting category:', error);
        showAlert('خطا در حذف دسته‌بندی', 'error');
      }
    }

    // Image preview
    document.getElementById('categoryImage').addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          const preview = document.getElementById('imagePreview');
          preview.src = e.target.result;
          preview.classList.add('show');
        };
        reader.readAsDataURL(file);
      }
    });

    // Show alert
    function showAlert(message, type) {
      const alertBox = document.getElementById('alertBox');
      alertBox.textContent = message;
      alertBox.className = `alert alert-${type} show`;
      setTimeout(() => alertBox.classList.remove('show'), 4000);
    }

    // Logout
    function logout() {
      localStorage.removeItem('authToken');
      localStorage.removeItem('userName');
      window.location.href = '/login';
    }

    // Initialize
    fetchCategories();
  </script>
</body>
</html>